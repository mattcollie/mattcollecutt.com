name: Deploy services to Stack
on:
  push:
    branches:
      - dev
      - master
    paths:
      - Makefile
      - Dockerfile
      - .github/workflows/deploy-service.yaml
      - static/**
      - '**/**.go'
      - '**.go'
      - 'go.*'
      - '**.js'
      - '**.ts'
      - '**.json'
  release:
    types: [ published ]
  workflow_dispatch:
  workflow_call:
    outputs:
      image:
        value: ${{ jobs.publish-manifest-list.outputs.image }}

permissions:
  contents: read
  packages: write

env:
  DOCKER_REGISTRY: ghcr.io

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      environment-name: ${{ steps.determine-env.outputs.environment-name }}
    steps:
      - name: Determine environment
        id: determine-env
        run: |
          if [[ "${{ github.ref }}" == 'refs/heads/dev' ]]; then
            echo "environment-name=dev" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == 'refs/heads/master' ]]; then
            echo "environment-name=staging" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == 'release' && "${{ github.event.action }}" == 'published' ]]; then
            echo "environment-name=prod" >> $GITHUB_OUTPUT
          else
            echo "Unknown environment - exiting"
            exit 1
          fi

  build-push-and-manifest:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read  # Needed for checkout
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    outputs:
      image: ${{ steps.manifest-create.outputs.image }} # Output the final image tag

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.platform }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Docker image name
        id: docker-image-name
        env:
          REPOSITORY: ${{ github.repository }}
        run: echo "value=${DOCKER_REGISTRY}/${REPOSITORY,,}" >> $GITHUB_OUTPUT

      - name: Docker metadata
        id: docker-metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.docker-image-name.outputs.value }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=sha-
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          flavor: |
            latest=true

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: build-and-push-docker-image
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          outputs: type=registry,name=${{ steps.docker-image-name.outputs.value }},push-by-digest=true
          cache-from: type=gha,scope=buildkit-${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=buildkit-${{ matrix.platform }}
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }}

      - name: Create manifest list (and get digest)
        id: manifest-create
        run: |
          safe_platform=$(echo "${{ matrix.platform }}" | tr '/' '-')
          digest="${{ steps.build-and-push-docker-image.outputs.digest }}"
          image_ref="${{ steps.docker-image-name.outputs.value }}@$digest"

          # Construct the full command.  No need for separate variables.
          command="docker buildx imagetools create \
            $(echo '${{ steps.docker-metadata.outputs.tags }}' | tr '\n' ' ' | sed 's/ /, -t /g') -t ${{ steps.docker-image-name.outputs.value }} \
             $image_ref"

          echo "Running command: $command"
          $command
          echo "image=${{ steps.docker-metadata.outputs.tags }}" >> "$GITHUB_OUTPUT" #Output for use

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ steps.manifest-create.outputs.image }}

  deploy:
    needs:
      - build-push-and-manifest
      - determine-environment
    environment: ${{ needs.determine-environment.outputs.environment-name }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: create env file
        run: |
          echo "GIT_COMMIT_HASH=sha-$(echo ${{ github.sha }} | cut -c 1-7)" >> ./envfile
          echo "WEB_HOST=${{ vars.WEB_HOST }}" >> ./envfile
          echo "ENV=${{ needs.determine-environment.outputs.environment-name }}" >> ./envfile

      - name: Docker Stack Deploy
        uses: mngonz/cloudfared-stack-deploy-action@main
        with:
          name: mattcollecutt-com-${{ needs.determine-environment.outputs.environment-name }}
          file: docker-stack.yaml
          host: ${{ vars.DEPLOY_HOST }}
          user: deploy
          ssh_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          env_file: ./envfile
          private_registry_url: https://ghcr.io
          private_registry_username: ${{ github.actor }}
          private_registry_password: ${{ secrets.GITHUB_TOKEN }}
